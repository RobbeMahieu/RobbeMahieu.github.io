[
  {
    "title": "Dont_Forget",
    "tagline": "C# Unity",
    "description": "You wake up in a vaguely familiar place with only a journal at your side. You don't know how you got here, but maybe... retracing your steps will help?\n\nExplore the world of Don't Forget as you try to recover your memories in a race against your own deteriorating mind.Complete brain games and find collectables and poems that give you clues into the deeper story behind the missing pieces of who you are.Immerse yourself in the moving soundtrack specially composed for the game.\n\nMy contributions:\n* Prototyping in Unity\n* Back bone system infrastructure (Game state and manager)\n* Stencil buffer shader for the character and walls\n* Writing the story and flavour text\n\n\nThis game was make by a team of 8 people:\nRobbe Mahieu (Programmer)\nSander De Keukelaere (Programmer)\nLee Vangraefschepe (Programmer)\nNina Krutkyté (Artist)\nEvie Verstappen (Artist)\nNiyash Khadka (Artist)\nEve McIntosh (Poet)\nFrederique Le Duc-Moreau (Composer)\n",
    "images": [ "title.png", "house.png", "hospital.png", "accident.png", "journal.png", "inspect.png", "math.png", "memory.png", "simon.png"],
    "links": [
      {
        "site": "itch",
        "link": "https://sander-de-keukelaere.itch.io/dont-forget"
      },
      {
        "site": "youtube",
        "link": "https://www.youtube.com/watch?v=Pf2lxoVuai0"
      }
    ]
  },
  {
    "title": "Space_Invaders",
    "tagline": "x86 Assembly",
    "description": "With this project, I wanted to understand how to make a game in x86 Assembly by using modern game programming techniques. To show these techniques work, a fully functioning clone of the classic Space Invaders game was made. For this, a mini game engine was created in Assembly that supports sprites, collision, input mapping and has a basic game loop. The rendering is also double buffered.\n\nThis project was made as my graduation work for Howest DAE.\n\nInvolved topics:\n* x86 Assembly\n* Low level Win32 API\n* Game loop\n* Linked list\n* Memory management\n* Game programming patterns\n",
    "images": [ "finalGame.png", "gameplay.gif" ],
    "links": [
      {
        "site": "github",
        "link": "https://github.com/RobbeMahieu/AssemblySpaceInvaders"
      }
    ]
  },
  {
    "title": "Magnets!",
    "tagline": "C# Unity",
    "description": "MAGNETS! is a local multiplayer, player vs. player, sumo game where you need to push all of your friends out of the ring (and maybe ruin some friendships along the way). \n\nBut there's a twist! Every object, (YES! Even the sumo wrestlers) are magnets, so you'll attract or repel other players AND objects (like bullets and bombs) that get thrown your way!\n\nThe last magnet standing wins the round!\n\nMy contributions:\n* Prototyping in Unity and Unreal\n* The central magnet mechanic (attraction and repulsion)\n* UI and HUD programming\n* Adding game juice and polish\n* Gameplay programming (bullet and bomb spawning)\n\n\nThis game was make by a team of 5 people:\nRobbe Mahieu (Programmer)\nSander De Keukelaere (Programmer)\nNina Krutkyté (Artist)\nMiel Vandepitte (Artist)\nBranco Devedeleer (Artist)\n",
    "images": [ "cover.jpg", "gameplay.gif", "screen1.png", "countdown.gif", "screen2.png" ],
    "links": [
      {
        "site": "itch",
        "link": "https://sander-de-keukelaere.itch.io/magnets"
      },
      {
        "site": "youtube",
        "link": "https://youtu.be/LrhZ_1qrnKU"
      }
    ]
  },
  {
    "title": "Ball-A-Site",
    "tagline": "C++ Unreal",
    "description": "Grads in Games Rising Star 2023 Winner\n\nFor the Rising Star competition, I was asked to create a game on my own, starting from a given project. I created a game in one week, where you need to capture orbs that are wandering around a planet. The orbs get more difficult to catch in later levels. Every step of the creation of this game is documented in the link below.\n\nInvolved topics:\n* Understanding, modifying and expanding an existing codebase\n* Spawning objects on a sphere\n* Unreal C++ and blueprint communication",
    "images": [ "cover.png", "gameplay.gif", "screen1.PNG" ],
    "links": [
      {
        "site": "itch",
        "link": "https://mear.itch.io/ballasite"
      }
    ],
    "stamps": [ "gigWinner.png" ]
  },
  {
    "title": "Pengo_Clone",
    "tagline": "C++ Game Engine",
    "description": "This Pengo clone is a Win32 project, created on my own and fully from scratch. This game was created to showcase the capabilities of the game engine. \n\nThe game engine contains:\n* Component system\n* Audio system on a seperate thread\n* Event system\n* Subject-Observer pattern\n* Input system\n\n The game also supports up to two players.",
    "images": [ "screen1.png", "gameplay.gif" ],
    "links": [
      {
        "site": "github",
        "link": "https://github.com/RobbeMahieu/Prog4_Mahieu_Robbe_Pengo"
      }
    ]
  },
  {
    "title": "Portal_Remake",
    "tagline": "C++",
    "description": "This Portal clone was made in the Overlord engine. This engine uses PhysX and DirectX 10. This project has a strong focus towards graphics programming, where the main challenge is creating the portal effect.\n\nInvolved topics:\n* Direct X\n* Recursive portals\n* Quaternion rotations\n* Shadowm apping\n* Stencil buffer\n* Particle systems\n\nPortal recursion (seeing a portal through a portal) is currently being worked on: It currently supports recursive portals, but those contain some projection artifacts (This is shown in the last image in the gallery).",
    "images": [ "teleport.gif", "cube.png", "shooting.gif", "portal.png", "room.png", "recursion.gif" ],
    "links": [
      {
        "site": "github",
        "link": "https://github.com/RobbeMahieu/PortalRemake"
      }
    ]
  },
  {
    "title": "Amba_The_Witch",
    "tagline": "Unreal VR",
    "description": "Amba recently graduated from the University of Witchcraft and today marks the opening day to her brand new potion shop! Can you help her to complete the orders for her customers?\n\nBut you better be careful, as mixing wrong ingredients can have unexpected outcomes.\n\nMy contributions:\n* Fluid shader in flask\n* Recipe book interaction\n* Allround problem solver\n* Playtesting\n\nThis game was part of the Unwrap Gamejam and was made by 6 programmers:\nAmber Perard\nStassijns Sam\nDejonckheere Ward\nRobbe Mahieu\nSix Arne\nSiebe Boeckx",
    "images": [ "screen1.png" ],
    "links": [
      {
        "site": "itch",
        "link": "https://sixarne.itch.io/amber-the-witch"
      },
      {
        "site": "youtube",
        "link": "https://youtu.be/ZPIioBiln14"
      }
    ]
  },
  {
    "title": "Stochastic_Grammar",
    "tagline": "C++",
    "description": "Classes to construct stochastic grammar and create sequences following that grammar. It supports sequence rules, selection rules, repetition rules and recursion. \n\nThese are generic classes, so the generated sequences can be an array of any type of object (from a string to an enemy). It contains functions to create grammar based on a given string.",
    "images": [ "Rivers.gif", "LSystem.gif", "items.png" ],
    "links": [
      {
        "site": "github",
        "link": "https://github.com/RobbeMahieu/GGP_StochasticGrammar"
      }
    ]
  }
]
